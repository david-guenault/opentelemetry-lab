receivers:
  hostmetrics:
    collection_interval: 10s
    scrapers:
      cpu:
      disk:
      memory:
      network:
      load:
      filesystem:
      paging:
      processes: # process count metrics
      process: # per process cpu memory and disk io metrics
      system:

  prometheus/node-exporter:
    config:
      scrape_configs:
        - job_name: 'node_exporter'
          static_configs:
            - targets: ['localhost:9100']

  prometheus/process-exporter:
    config:
      scrape_configs:
        - job_name: 'process_exporter'
          static_configs:
            - targets: ['localhost:9100']

processors:
  batch:
    timeout: 10s
    send_batch_size: 1024

  memory_limiter:
    check_interval: 5s
    limit_mib: 150


  # this one is required for hostmetrics
  transform/hostmetrics:
    error_mode: ignore
    metric_statements:
      - context: datapoint
        # get process pid and executable name from resource attributes and put it on datapoint
        # this allow to join the target_info metric label 
        statements:
          - set(attributes["process_pid"], resource.attributes["process.pid"])
          - set(attributes["process_executable_name"], resource.attributes["process.command_line"])

  resourcedetection/system:
    # we get the service.* metrics attributes from environment
    # caution this is not good for collectors requiring differents values
    # of service.* for differents collectors (system vs application for example)
    detectors: ["env", "system"]
    system:
      hostname_sources: ["os"]

exporters:
  debug:
    verbosity: detailed
  otlp:
    endpoint: ${ENDPOINT}
    tls:
      insecure: true

service:
  pipelines:
    metrics/hostmetrics:
      receivers: [hostmetrics]
      processors: [batch, memory_limiter, resourcedetection/system, transform/hostmetrics]
      exporters: [debug,otlp]
    metrics/node-exporter:
      receivers: [prometheus/node-exporter]
      processors: [batch, memory_limiter, resourcedetection/system]
      exporters: [debug,otlp]
    metrics/process-exporter:
      receivers: [prometheus/process-exporter]
      processors: [batch, memory_limiter, resourcedetection/system]
      exporters: [debug,otlp]      